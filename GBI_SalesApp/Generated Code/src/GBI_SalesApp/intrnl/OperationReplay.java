/**
 * Generated by Sybase AFX Compiler with templateJ
 * Compiler version - 2.1.3.358
 * mbs - false 
 */
package GBI_SalesApp.intrnl;

public  class OperationReplay extends com.sybase.persistence.AbstractReadOnlyEntity implements com.sybase.persistence.OperationReplay, com.sybase.reflection.ClassWithMetaData
{
    /** Begin code region: MetaData **/
    private static GBI_SalesApp.intrnl.OperationReplayMetaData META_DATA = new GBI_SalesApp.intrnl.OperationReplayMetaData();
    
    /**
     * return MetaData object  
     */
    public com.sybase.reflection.ClassMetaData getClassMetaData()
    {
        return META_DATA;
    }
    
    /**
     * return MetaData object  
     */
    public static com.sybase.reflection.EntityMetaData getMetaData()
    {
        return META_DATA;
    }
    
    /** End code region: MetaData **/
    protected static com.sybase.sup.client.persistence.EntityDelegate DELEGATE = 
        com.sybase.sup.client.persistence.DelegateFactory.createEntityDelegate("OperationReplay", GBI_SalesApp.intrnl.OperationReplay.class, "GBI_SalesApp.OperationReplay", META_DATA, GBI_SalesApp.GBI_SalesAppDB.getDelegate());
    
    
    /** Begin code region: Properties **/
    private java.lang.String __remoteId ;  
    
    private java.lang.String __component ;  
    
    private java.lang.String __entityKey ;  
    
    private java.lang.String __attributes ;  
    
    private java.lang.String __operation ;  
    
    private java.lang.String __parameters ;  
    
    private java.lang.String __replayLog ;  
    
    private java.lang.String __exception ;  
    
    private boolean __completed ;  
    
    private long __requestId ;  
    
    public long getAttributeLong(int id)
    {
        switch(id)
        {
        case 479:
            return getRequestId();
        default:
            return super.getAttributeLong(id);
        }
    }
    
    public void setAttributeLong(int id, long v)
    {
        switch(id)
        {
        case 479:
            setRequestId((long)v);
            break;
        default:
            super.setAttributeLong(id, v);
            break;
        }
    }
    public java.lang.String getAttributeNullableString(int id)
    {
        switch(id)
        {
        case 485:
            return getReplayLog();
        case 486:
            return getException();
        default:
            return super.getAttributeNullableString(id);
        }
    }
    
    public void setAttributeNullableString(int id, java.lang.String v)
    {
        switch(id)
        {
        case 485:
            setReplayLog((java.lang.String)v);
            break;
        case 486:
            setException((java.lang.String)v);
            break;
        default:
            super.setAttributeNullableString(id, v);
            break;
        }
    }
    public java.lang.String getAttributeString(int id)
    {
        switch(id)
        {
        case 478:
            return getRemoteId();
        case 480:
            return getComponent();
        case 481:
            return getEntityKey();
        case 482:
            return getAttributes();
        case 483:
            return getOperation();
        case 484:
            return getParameters();
        default:
            return super.getAttributeString(id);
        }
    }
    
    public void setAttributeString(int id, java.lang.String v)
    {
        switch(id)
        {
        case 478:
            setRemoteId((java.lang.String)v);
            break;
        case 480:
            setComponent((java.lang.String)v);
            break;
        case 481:
            setEntityKey((java.lang.String)v);
            break;
        case 482:
            setAttributes((java.lang.String)v);
            break;
        case 483:
            setOperation((java.lang.String)v);
            break;
        case 484:
            setParameters((java.lang.String)v);
            break;
        default:
            super.setAttributeString(id, v);
            break;
        }
    }
    public boolean getAttributeBoolean(int id)
    {
        switch(id)
        {
        case 487:
            return getCompleted();
        default:
            return super.getAttributeBoolean(id);
        }
    }
    
    public void setAttributeBoolean(int id, boolean v)
    {
        switch(id)
        {
        case 487:
            setCompleted((boolean)v);
            break;
        default:
            super.setAttributeBoolean(id, v);
            break;
        }
    }
    
    public Object getAttributeJson(int id)
    {
        switch(id)
        {
        default:
            return super.getAttributeJson(id);
        }
    }
    
    public void setAttributeJson(int id, Object value)
    {
        switch(id)
        {
        default:
            super.setAttributeJson(id, value);
            break;
        }
    }
    /** End code region: Properties **/
    
    /** Begin code region: Constructor and init **/
    /**
     * Creates an instance of GBI_SalesApp.intrnl.OperationReplay  
     */
    public OperationReplay()
    {
        setEntityDelegate(DELEGATE);
        _init();
    }
    protected void _init()
    {
        
    }
    /** End code region: Constructor and init **/
    
    /**
     * get the value of remoteId  
     */
    public java.lang.String getRemoteId()
    {
        
        return __remoteId;
    }
    
    /**
     * Set the value of remoteId  
     */
    public void setRemoteId(java.lang.String value)
    {
        if ((__remoteId == null) != (value == null) || (value != null && ! value.equals(__remoteId)))
        {
            _isDirty = true;
        }
        __remoteId = value;
    }       
    /**
     * get the value of component  
     */
    public java.lang.String getComponent()
    {
        
        return __component;
    }
    
    /**
     * Set the value of component  
     */
    public void setComponent(java.lang.String value)
    {
        if ((__component == null) != (value == null) || (value != null && ! value.equals(__component)))
        {
            _isDirty = true;
        }
        __component = value;
    }       
    /**
     * get the value of entityKey  
     */
    public java.lang.String getEntityKey()
    {
        
        return __entityKey;
    }
    
    /**
     * Set the value of entityKey  
     */
    public void setEntityKey(java.lang.String value)
    {
        if ((__entityKey == null) != (value == null) || (value != null && ! value.equals(__entityKey)))
        {
            _isDirty = true;
        }
        __entityKey = value;
    }       
    /**
     * get the value of attributes  
     */
    public java.lang.String getAttributes()
    {
        
        return __attributes;
    }
    
    /**
     * Set the value of attributes  
     */
    public void setAttributes(java.lang.String value)
    {
        if ((__attributes == null) != (value == null) || (value != null && ! value.equals(__attributes)))
        {
            _isDirty = true;
        }
        __attributes = value;
    }       
    /**
     * get the value of operation  
     */
    public java.lang.String getOperation()
    {
        
        return __operation;
    }
    
    /**
     * Set the value of operation  
     */
    public void setOperation(java.lang.String value)
    {
        if ((__operation == null) != (value == null) || (value != null && ! value.equals(__operation)))
        {
            _isDirty = true;
        }
        __operation = value;
    }       
    /**
     * get the value of parameters  
     */
    public java.lang.String getParameters()
    {
        
        return __parameters;
    }
    
    /**
     * Set the value of parameters  
     */
    public void setParameters(java.lang.String value)
    {
        if ((__parameters == null) != (value == null) || (value != null && ! value.equals(__parameters)))
        {
            _isDirty = true;
        }
        __parameters = value;
    }       
    /**
     * get the value of replayLog  
     */
    public java.lang.String getReplayLog()
    {
        
        return __replayLog;
    }
    
    /**
     * Set the value of replayLog  
     */
    public void setReplayLog(java.lang.String value)
    {
        if ((__replayLog == null) != (value == null) || (value != null && ! value.equals(__replayLog)))
        {
            _isDirty = true;
        }
        __replayLog = value;
    }       
    /**
     * get the value of exception  
     */
    public java.lang.String getException()
    {
        
        return __exception;
    }
    
    /**
     * Set the value of exception  
     */
    public void setException(java.lang.String value)
    {
        if ((__exception == null) != (value == null) || (value != null && ! value.equals(__exception)))
        {
            _isDirty = true;
        }
        __exception = value;
    }       
    /**
     * get the value of completed  
     */
    public boolean getCompleted()
    {
        
        return __completed;
    }
    
    /**
     * Set the value of completed  
     */
    public void setCompleted(boolean value)
    {
        if(__completed != value)
        {
            _isDirty = true;
        }
        __completed = value;
    }       
    /**
     * get the value of requestId  
     */
    public long getRequestId()
    {
        
        return __requestId;
    }
    
    /**
     * Set the value of requestId  
     */
    public void setRequestId(long value)
    {
        if(__requestId != value)
        {
            _isDirty = true;
        }
        __requestId = value;
    }
    
    /**
     * Search mobile business object using surrogateKey
     * @param id surrogateKey
     * @return mobile business object
     */
    public static GBI_SalesApp.intrnl.OperationReplay find(long id)
    {
        Object[] keys = new Object[]{id};
        return (GBI_SalesApp.intrnl.OperationReplay)(DELEGATE.findEntityWithKeys(keys));
    }
    
    /**
     * Get the mobile business object by surrogate key.
     * @param id surrogate key
     * @return the mobile business object for the surroget key
     * @exception ObjectNotFoundException Thrown if unable to retrieve mobile business object.
     */
    public static GBI_SalesApp.intrnl.OperationReplay load(long id)
    {
        return (GBI_SalesApp.intrnl.OperationReplay)(DELEGATE.load(id));
    }
    
    /**
     * Get surroget key of the mobile business object  
     */
    public java.lang.Long _pk()
    {
        return (java.lang.Long)i_pk();
    }
    
    /** Begin code region: Finder methods **/
    /**
     * Find a List of GBI_SalesApp.intrnl.OperationReplay
     * @exception PersistentException Thrown if unable to retrieve mobile business object.
     */
    public static com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay> findReadyToFinish(int skip, int take)
    {
        
        
            String _selectSQL = " r.\"a\",r.\"c\",r.\"d\",r.\"e\",r.\"f\",r.\"g\",r.\"h\",r.\"i\",r.\"j\",r.\"b\" from \"gbi_salesapp_1_0_operationreplay\" r where r.\"j\" = 1 order by r.\"b\"";
            _selectSQL = "select " + _selectSQL;
            String[] ids = new String[0];
            com.sybase.reflection.DataType[] dts = new com.sybase.reflection.DataType[]{    
            };
            Object[] values = new Object[] { 
            };
            com.sybase.collections.GenericList<Object> res = DELEGATE.findWithSQL(_selectSQL, dts, values, ids, skip, take, GBI_SalesApp.intrnl.OperationReplay.class);
            return (com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay>)(Object)res;
    }
    /**
     * Find a list of GBI_SalesApp.intrnl.OperationReplay  
     */
    public static com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay> findReadyToFinish()
    {
        return findReadyToFinish(0, Integer.MAX_VALUE);
    }
    
    /**
     * Returns the MBOs that are updated locally but not submitted.  
     */
    public static com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay> getPendingObjects(int skip, int take)
    {
        return (com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay>)(Object)DELEGATE.getPendingObjects(skip, take);
    }
    
    /**
     * Returns the MBOs that are updated locally but not submmited.  
     */
    public static com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay> getPendingObjects()
    {
        return (com.sybase.collections.GenericList<GBI_SalesApp.intrnl.OperationReplay>)(Object)DELEGATE.getPendingObjects();
    }
    
    /** End code region: Finder methods **/
    /**
     * Returns the log record list.  
     */
    public com.sybase.collections.GenericList<com.sybase.persistence.LogRecord> getLogRecords()
    {
        return GBI_SalesApp.LogRecordImpl.findByEntity("OperationReplay", keyToString());
    }
    
    
    
    /*Suppress compile error*/
    public void saveErrorInfo()
    {
    }
    
    
    
    
    
    
    
    
    
    
    /**
     * Install a callback handler
     */
    public static void registerCallbackHandler(com.sybase.persistence.CallbackHandler handler)
    {
        DELEGATE.registerCallbackHandler(handler);
    }
    
    public static com.sybase.persistence.CallbackHandler getCallbackHandler()
    {
        return DELEGATE.getCallbackHandler();
    }
}